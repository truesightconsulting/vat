setwd("d:\\VAT Optimizer\\code\\s curves\\")
library(data.table)
data=fread("input_curve.csv",skip=3,header=F)
shell=fread("input_curve.csv",nrows=3,header=F)
g.start=1e-3
v.start=1
shell=shell[,seq(2,ncol(shell),by=2),with=F]
shell=data.table(t(shell))
g=rep(0,ncol(data))
v=rep(0,ncol(data))
k=rep(0,ncol(data))
for (i in seq(1,ncol(data),2)){
print(i)
d=data[[i+1]]
id=data[[i]]
dataset=data.frame(d=d[!is.na(d)],id=id[!is.na(id)])
k.start <- max(dataset$d)
control1 <- nls.control(maxiter= 100000, minFactor= 1e-30, warnOnly= FALSE,tol=1e-05)
nl.reg <- try(nls(d ~ k * ((1-exp(-g * id))**v),data=dataset,start= list(k=k.start,g=g.start,v=v.start),
control= control1),silent=T)
if (class(nl.reg)=="try-error") break else {
k[i]=coef(nl.reg)[1]
g[i]=coef(nl.reg)[2]
v[i]=coef(nl.reg)[3]
}
}
if (class(nl.reg) =="try-error") {
curve.name=as.vector(as.matrix(shell[i,1:3,with=F]))
curve.name1=paste(curve.name,collapse=", ")
print(paste("Error: Curve: ",curve.name1," cannot be fitted. Please check the shape of that curve."))
} else{
shell$k=k[k!=0]
shell$g=g[g!=0]
shell$v=v[v!=0]
shell[,inf_point:=log(g)/v]
shell$inf_point[shell$inf_point<0]=0
write.csv(shell,"output.csv",row.names=F)
}
View(dataset)
k.start
g.start
v.start
(nls(d ~ k * ((1-exp(-g * id))**v),data=dataset,start= list(k=k.start,g=g.start,v=v.start),
control= control1)
)
g.start=1e-5
nl.reg <- try(nls(d ~ k * ((1-exp(-g * id))**v),data=dataset,start= list(k=k.start,g=g.start,v=v.start),
control= control1),silent=T)
nl.reg
g.start=1e-3
v.start=0.5
nl.reg <- try(nls(d ~ k * ((1-exp(-g * id))**v),data=dataset,start= list(k=k.start,g=g.start,v=v.start),
control= control1),silent=T)
nl.reg
setwd("d:\\VAT Optimizer\\code\\s curves\\")
library(data.table)
data=fread("input_curve.csv",skip=3,header=F)
shell=fread("input_curve.csv",nrows=3,header=F)
g.start=1e-3
v.start=0.5
shell=shell[,seq(2,ncol(shell),by=2),with=F]
shell=data.table(t(shell))
g=rep(0,ncol(data))
v=rep(0,ncol(data))
k=rep(0,ncol(data))
for (i in seq(1,ncol(data),2)){
print(i)
d=data[[i+1]]
id=data[[i]]
dataset=data.frame(d=d[!is.na(d)],id=id[!is.na(id)])
k.start <- max(dataset$d)
control1 <- nls.control(maxiter= 100000, minFactor= 1e-30, warnOnly= FALSE,tol=1e-05)
nl.reg <- try(nls(d ~ k * ((1-exp(-g * id))**v),data=dataset,start= list(k=k.start,g=g.start,v=v.start),
control= control1),silent=T)
if (class(nl.reg)=="try-error") break else {
k[i]=coef(nl.reg)[1]
g[i]=coef(nl.reg)[2]
v[i]=coef(nl.reg)[3]
}
}
if (class(nl.reg) =="try-error") {
curve.name=as.vector(as.matrix(shell[i,1:3,with=F]))
curve.name1=paste(curve.name,collapse=", ")
print(paste("Error: Curve: ",curve.name1," cannot be fitted. Please check the shape of that curve."))
} else{
shell$k=k[k!=0]
shell$g=g[g!=0]
shell$v=v[v!=0]
shell[,inf_point:=log(g)/v]
shell$inf_point[shell$inf_point<0]=0
write.csv(shell,"output.csv",row.names=F)
}
shell[,inf_point:=log(g)/v]
shell
setwd("d:\\VAT Optimizer\\code\\s curves\\")
library(data.table)
data=fread("input_curve.csv",skip=3,header=F)
shell=fread("input_curve.csv",nrows=3,header=F)
g.start=1e-3
v.start=0.5
shell=shell[,seq(2,ncol(shell),by=2),with=F]
shell=data.table(t(shell))
g=rep(0,ncol(data))
v=rep(0,ncol(data))
k=rep(0,ncol(data))
for (i in seq(1,ncol(data),2)){
print(i)
d=data[[i+1]]
id=data[[i]]
dataset=data.frame(d=d[!is.na(d)],id=id[!is.na(id)])
k.start <- max(dataset$d)
control1 <- nls.control(maxiter= 100000, minFactor= 1e-30, warnOnly= FALSE,tol=1e-05)
nl.reg <- try(nls(d ~ k * ((1-exp(-g * id))**v),data=dataset,start= list(k=k.start,g=g.start,v=v.start),
control= control1),silent=T)
if (class(nl.reg)=="try-error") break else {
k[i]=coef(nl.reg)[1]
g[i]=coef(nl.reg)[2]
v[i]=coef(nl.reg)[3]
}
}
if (class(nl.reg) =="try-error") {
curve.name=as.vector(as.matrix(shell[i,1:3,with=F]))
curve.name1=paste(curve.name,collapse=", ")
print(paste("Error: Curve: ",curve.name1," cannot be fitted. Please check the shape of that curve."))
} else{
shell$k=k[k!=0]
shell$g=g[g!=0]
shell$v=v[v!=0]
shell[,inf_point:=log(v)/g]
shell$inf_point[shell$inf_point<0]=0
write.csv(shell,"output.csv",row.names=F)
}
